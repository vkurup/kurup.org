<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tcl on Vinod Kurup</title>
    <link>https://kurup.org/categories/tcl/</link>
    <description>Recent content in tcl on Vinod Kurup</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Sep 2006 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kurup.org/categories/tcl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Working with collections</title>
      <link>https://kurup.org/blog/2006/09/25/working-with-collections/</link>
      <pubDate>Mon, 25 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://kurup.org/blog/2006/09/25/working-with-collections/</guid>
      <description>Steve Yegge wrote about the expressiveness of Ruby as compared to Java. He used this simple problem as an example:
 How about if we write a program that will print out all the words in the dictionary starting with the letter &amp;lsquo;Q&amp;rsquo; (case-insensitive), grouped by increasing length, and sorted alphabetically within each group.
 The Ruby version was about 12 lines of code and Java version about 43. Of course, the point of the exercise wasn&amp;rsquo;t simply the difference in LOCs, but in the overall simplicity of dealing with collections of data.</description>
    </item>
    
    <item>
      <title>Automated Testing Rules</title>
      <link>https://kurup.org/blog/2006/05/16/automated-testing-rules/</link>
      <pubDate>Tue, 16 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://kurup.org/blog/2006/05/16/automated-testing-rules/</guid>
      <description>Automated testing is a good thing. For my running log application, I have a proc that creates a new log for a user, called rl::runner::new. If you happen to call it for a user who already has a log, it returns the already created log. When I created the proc way back when, I also created an automated test to make sure that creation worked and that redundant calls returned the orignal log.</description>
    </item>
    
    <item>
      <title>New Features coming in Tcl 8.5</title>
      <link>https://kurup.org/blog/2006/05/14/new-features-coming-in-tcl-8.5/</link>
      <pubDate>Sun, 14 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://kurup.org/blog/2006/05/14/new-features-coming-in-tcl-8.5/</guid>
      <description>I was looking at the Tcl 8.4 man page for &amp;lsquo;split&amp;rsquo; and saw this example code:
## Split into fields on colons set fields [split $rec &amp;#34;:&amp;#34;] ## Assign fields to variables and print some out... lassign $fields userName password uid grp longName homeDir shell It shows how to split a string using &amp;lsquo;:&amp;rsquo; as the delimiter. The interesting part is the &amp;lsquo;lassign&amp;rsquo; statement. I&amp;rsquo;d never seen that before. I&amp;rsquo;ve always done something annoying like this:</description>
    </item>
    
    <item>
      <title>Hit The Wall (a running log)</title>
      <link>https://kurup.org/blog/2006/04/21/hit-the-wall-a-running-log/</link>
      <pubDate>Fri, 21 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://kurup.org/blog/2006/04/21/hit-the-wall-a-running-log/</guid>
      <description>I built a web application to keep track of my running a couple years ago. I really began using it in earnest during my training for the New York Marathon last year. I&amp;rsquo;ve been meaning to make it available for others to use for a long time, but it always seemed like there was a little more work I needed to do on it. While working on it the other day, I noticed the original timestamp on one of the source files: September 21, 2003 Yikes!</description>
    </item>
    
    <item>
      <title>Tcl, a short introduction</title>
      <link>https://kurup.org/blog/2006/03/09/tcl-a-short-introduction/</link>
      <pubDate>Thu, 09 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://kurup.org/blog/2006/03/09/tcl-a-short-introduction/</guid>
      <description>The scripting language used in most of OpenACS is Tcl. It doesn&amp;rsquo;t receive a lot of press. When people talk about scripting languages, they mean Perl or Python (and now Ruby). Tcl is not considered in the same category, but it should be. I&amp;rsquo;m not smart enough to explain why, but Salvatore Sanfilippo is and has written a gentle introduction to both the basic and powerful features of Tcl.</description>
    </item>
    
  </channel>
</rss>