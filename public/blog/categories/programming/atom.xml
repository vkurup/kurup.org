<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | Vinod Kurup]]></title>
  <link href="https://www.kurup.org/blog/categories/programming/atom.xml" rel="self"/>
  <link href="https://www.kurup.org/"/>
  <updated>2016-04-08T21:58:40-04:00</updated>
  <id>https://www.kurup.org/</id>
  <author>
    <name><![CDATA[Vinod Kurup]]></name>
    <email><![CDATA[vinod@kurup.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using dynamic queries in a CBV]]></title>
    <link href="https://www.kurup.org/blog/2014/07/28/cbv-dynamic"/>
    <updated>2014-07-28T22:08:00-04:00</updated>
    <id>https://www.kurup.org/blog/2014/07/28/cbv-dynamic</id>
    <content type="html"><![CDATA[<p>Let's play 'Spot the bug'. We're building a simple system that shows photos. Each photo has a
<code>publish_date</code> and we should only show photos that have been published (i.e. their <code>publish_date</code> is
in the past).</p>

<p>``` python models.py
class PhotoManager(models.Manager):</p>

<pre><code>def live(self, as_of=None):
    if as_of is None:
        as_of = timezone.now()
    return super().get_query_set().filter(publish_date__lte=as_of)
</code></pre>

<p>```</p>

<p>And the view to show those photos:</p>

<p>``` python views.py
class ShowPhotosView(ListView):</p>

<pre><code>queryset = Hero.objects.live()
</code></pre>

<p>```</p>

<p>Can you spot the bug? I sure didn't... until the client complained that newly published photos never
showed up on the site. Restarting the server fixed the problem temporarily. The newly published
photos would show up, but then any photos published after the server restart again failed to
display.</p>

<p>The problem is that the <code>ShowPhotosView</code> class is instantiated when the server starts.
<code>ShowPhotosView.queryset</code> gets set to the value returned by <code>Hero.objects.live()</code>. That, in turn, is a
<code>QuerySet</code>, but it's a <code>QuerySet</code> with <code>as_of</code> set to <code>timezone.now()</code> <em>WHEN THE SERVER STARTS UP</em>. That
<code>as_of</code> value never gets updated, so newer photos never get captured in the query.</p>

<p>There's probably multiple ways to fix this, but an easy one is:</p>

<p>``` python views.py
class ShowPhotosView(ListView):</p>

<pre><code>def get_queryset(self):
    return Hero.objects.live()
</code></pre>

<p>```</p>

<p>Now, instead of the queryset being instantiated at server start-up, it's instantiated only when
<code>ShowPhotosView.get_queryset()</code> is called, which is when a request is made.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some Emacs Posts]]></title>
    <link href="https://www.kurup.org/blog/2014/07/23/some-emacs-posts"/>
    <updated>2014-07-23T21:38:00-04:00</updated>
    <id>https://www.kurup.org/blog/2014/07/23/some-emacs-posts</id>
    <content type="html"><![CDATA[<p>A few cool Emacs posts have flown across my radar, so I'm noting them here for that time in the
future when I have time to play with them.</p>

<ul>
<li><a href="http://endlessparentheses.com/manually-choose-a-fallback-font-for-unicode.html">Get unicode glyphs to show properly</a>. (╯°□°）╯︵ ┻━┻</li>
<li><a href="http://jr0cket.co.uk/2013/10/create-cool-slides--Org-mode-Revealjs.html/">Creating slides with org-mode and Reveal.js</a>.
Finally, a sane way to create a presentation :)</li>
<li><a href="https://github.com/syohex/emacs-anzu">Anzu</a>: Improves incremental search. Anzu shows the number
of matches found, and how many matches remain in the document.
<img src="https://github.com/syohex/emacs-anzu/raw/master/image/anzu.gif"></li>
<li><a href="http://from-the-cloud.com/en/emacs/2013/01/28_emacs-as-a-django-ide-with-python-djangoel.html">Emacs as a Django IDE</a>:
I tried this out briefly, but didn't end up sticking with it. It seemed too heavyweight.
I'm probably just too used to my own workflow. I still think it's an interesting idea and would
like to try it again sometime.</li>
<li><a href="http://emacsredux.com/blog/2014/07/22/travel-back-and-forward-in-git-history/">Travel back and forth in git history</a>:
I'm addicted to <a href="http://www.emacswiki.org/emacs/Magit">magit mode</a>, to the point that the
only git command I use manually nowadays is <code>git clone</code>. I do everything else in magit. Magit has
a <code>magit-blame-mode</code> which shows when each line in a file was changed and by whom.
<code>git-timemachine</code> seems to take that a step further by visiting each revision, one by
one. I can think of a few times where that would have been useful.</li>
<li><a href="https://github.com/omouse/emacs-sos">Search StackOverflow from inside Emacs</a>: Enough said.</li>
<li><a href="https://github.com/skeeto/elfeed">Emacs RSS client</a>: Still using NewsBlur, but totally miss
Google Reader. Maybe I need to try this one out.</li>
<li><a href="http://sachachua.com/blog/series/read-lisp-tweak-emacs/">Sacha Chua's minicourse on Elisp</a>: Have
to read through this someday!</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pygments on Arch Linux]]></title>
    <link href="https://www.kurup.org/blog/2014/07/22/pygments-py3"/>
    <updated>2014-07-22T21:16:00-04:00</updated>
    <id>https://www.kurup.org/blog/2014/07/22/pygments-py3</id>
    <content type="html"><![CDATA[<p>I wrote my first blog post in a little while (ok, ok... 18 months) yesterday and when I tried to
generate the post, it failed. Silently failed, which is the worst kind of failure. I'm still not
sure why it was silent, but I eventually was able to force it to show me an error message:</p>

<p><code>``
/home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/pygments.rb-0.3.4/lib/pygments/popen.rb:354:in</code>rescue in get_header': Failed to get header. (MentosError)</p>

<pre><code>from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/pygments.rb-0.3.4/lib/pygments/popen.rb:335:in `get_header'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/pygments.rb-0.3.4/lib/pygments/popen.rb:232:in `block in mentos'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/1.9.1/timeout.rb:68:in `timeout'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/pygments.rb-0.3.4/lib/pygments/popen.rb:206:in `mentos'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/pygments.rb-0.3.4/lib/pygments/popen.rb:189:in `highlight'
from /home/vinod/dev/kurup.org/plugins/pygments_code.rb:24:in `pygments'
from /home/vinod/dev/kurup.org/plugins/pygments_code.rb:14:in `highlight'
from /home/vinod/dev/kurup.org/plugins/backtick_code_block.rb:37:in `block in render_code_block'
from /home/vinod/dev/kurup.org/plugins/backtick_code_block.rb:13:in `gsub'
from /home/vinod/dev/kurup.org/plugins/backtick_code_block.rb:13:in `render_code_block'
from /home/vinod/dev/kurup.org/plugins/octopress_filters.rb:12:in `pre_filter'
from /home/vinod/dev/kurup.org/plugins/octopress_filters.rb:28:in `pre_render'
from /home/vinod/dev/kurup.org/plugins/post_filters.rb:112:in `block in pre_render'
from /home/vinod/dev/kurup.org/plugins/post_filters.rb:111:in `each'
from /home/vinod/dev/kurup.org/plugins/post_filters.rb:111:in `pre_render'
from /home/vinod/dev/kurup.org/plugins/post_filters.rb:166:in `do_layout'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/post.rb:195:in `render'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:200:in `block in render'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:199:in `each'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:199:in `render'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:41:in `process'
from /home/vinod/.rbenv/versions/1.9.3-p286/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/bin/jekyll:264:in `&lt;top (required)&gt;'
from /home/vinod/.rbenv/versions/1.9.3-p286/bin/jekyll:23:in `load'
from /home/vinod/.rbenv/versions/1.9.3-p286/bin/jekyll:23:in `&lt;main&gt;'
</code></pre>

<p>```</p>

<p>Professor Google tells me that this happens when you try to
<a href="https://github.com/tmm1/pygments.rb/issues/45">run the pygments.rb library in a Python 3 environment</a>.
(pygments.rb is a Ruby wrapper around the Python Pygments library). The fix is to run the code in a
Python2 virtualenv. I guess the last time I updated my blog, Arch still had Python2 as the system
default. No, I don't want to check how long ago that was.</p>

<p><code>
$ mkvirtualenv -p `which python2` my_blog
(my_blog)$ bundle exec rake generate
</code></p>

<p>So now I'm running a Ruby command in a Ruby environment (rbenv) inside a Python 2 virtualenv. Maybe
it's time to switch blog tools again...</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to create test models in Django]]></title>
    <link href="https://www.kurup.org/blog/2014/07/21/django-test-models"/>
    <updated>2014-07-21T20:44:00-04:00</updated>
    <id>https://www.kurup.org/blog/2014/07/21/django-test-models</id>
    <content type="html"><![CDATA[<p>It's occasionally useful to be able to create a Django model class in your unit test suite. Let's
say you're building a library which creates an
<a href="https://docs.djangoproject.com/en/dev/topics/db/models/#abstract-base-classes">abstract model</a>
which your users will want to subclass. There's no need for your library to subclass it, but your
library should still test that you can create a subclass and test out its features. If you create
that model in your <code>models.py</code> file, then Django will think that it is a real part of your library and
load it whenever you (or your users) call <code>syncdb</code>. That's bad.</p>

<p>The <a href="https://code.djangoproject.com/ticket/7835#comment:24">solution</a> is to create it in a <code>tests.py</code>
file within your Django app. If it's not in <code>models.py</code>, Django won't load it during <code>syncdb</code>.</p>

<p>``` python tests.py
from django.db import models
from django.test import TestCase</p>

<p>from .models import MyAbstractModel</p>

<p>class MyTestModel(MyAbstractModel):</p>

<pre><code>name = models.CharField(max_length=20)
</code></pre>

<p>class AbstractTest(TestCase):</p>

<pre><code>def test_my_test_model(self):
    self.assertTrue(MyTestModel.objects.create(name='foo'))
</code></pre>

<p>```</p>

<p>A problem with this solution is that I rarely use a single <code>tests.py</code> file. Instead we use multiple
test files collected in a tests package. If you try to create a model in <code>tests/test_foo.py</code>, then
this approach fails because Django tries to create the model in an application named <code>tests</code>, but
there is no such app in INSTALLED_APPS. The solution is to set <code>app_label</code> to the name of your app
in an inner Meta class.</p>

<p>```python tests/test_foo.py
from django.db import models
from django.test import TestCase</p>

<p>from ..models import MyAbstractModel</p>

<p>class MyTestModel(MyAbstractModel):</p>

<pre><code>name = models.CharField(max_length=20)

class Meta:
    app_label = 'myappname'
</code></pre>

<p>class AbstractTest(TestCase):</p>

<pre><code>def test_my_test_model(self):
    self.assertTrue(MyTestModel.objects.create(name='foo'))
</code></pre>

<p>```</p>

<p>Oh, and I almost forgot... if you use <a href="http://south.readthedocs.org/en/latest/index.html">South</a>,
this might not work, unless you set <code>SOUTH_TESTS_MIGRATE</code> to <code>False</code> in your settings file.</p>

<p>Comments and corrections welcome!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSBrief gets the best guests]]></title>
    <link href="https://www.kurup.org/blog/2012/11/05/nsbrief-gets-the-best-guests"/>
    <updated>2012-11-05T10:38:09-05:00</updated>
    <id>https://www.kurup.org/blog/2012/11/05/nsbrief-gets-the-best-guests</id>
    <content type="html"><![CDATA[<p>I'm not an OS X programmer, but I've really enjoyed 2 recent episodes
of the <a href="http://nsbrief.com/">NSBrief</a> podcast. First was <a href="http://nsbrief.com/59-mark-dalrymple">Mark
Dalrymple's interview</a>. Here was
my 140 character description:</p>

<blockquote class="twitter-tweet"><p>So much geeky fun in @<a href="https://twitter.com/borkware">borkware</a>'s interview. AOLserver, dtrace, OpenDoc, MPW, need I go on? <a href="http://t.co/JWPPvfaa" title="http://nsbrief.com/59-mark-dalrymple">nsbrief.com/59-mark-dalrym…</a></p>&mdash; Vinod Kurup (@vkurup) <a href="https://twitter.com/vkurup/status/235907385997262848" data-datetime="2012-08-16T01:14:38+00:00">August 16, 2012</a></blockquote>


<script src="https://www.kurup.org//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Today, I listened to
<a href="http://nsbrief.com/62-mark-aufflick">Mark Aufflick's interview</a> where
he talks eloquently about starting your own business. I love the
perspective he had on his first business and how shutting it down gave
him the necessary (though painful) experience to make his current
business work. He also talked about the importance of computing
history especially given the availability of interesting subjects. He
ended with great advice on the importance of professionalism.
Paraphrased: "Make sure your team is the most professional side of any
relationship."</p>

<p>I know <a href="http://borkware.com">Mark</a> and
<a href="http://mark.aufflick.com/">Mark</a> from the
<a href="http://openacs.org">OpenACS</a> glory days and it's great to hear how
well they're doing. Computing history was a prominent part of both
talks. I think this is important. Old ideas are always new again. Some
of the ideas that these pioneers had were only limited by the
horsepower we had to work with at the time. Now thanks to Moore's law,
those limitations are gone, so we should re-investigate those ideas.
Or maybe we're all just getting old and like to talk about the
good-old-days. :-) It's nice to see that they both mentioned the
OpenACS period of their programming lives as important. It certainly
was for me. It was also great to hear Mark Aufflick's voice for the
first time, even though I feel like he's been a friend for many years.</p>
]]></content>
  </entry>
  
</feed>
