<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: free-software | Vinod Kurup]]></title>
  <link href="https://www.kurup.org/blog/categories/free-software/atom.xml" rel="self"/>
  <link href="https://www.kurup.org/"/>
  <updated>2019-04-08T21:26:42-04:00</updated>
  <id>https://www.kurup.org/</id>
  <author>
    <name><![CDATA[Vinod Kurup]]></name>
    <email><![CDATA[vinod@kurup.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[clamz to the rescue]]></title>
    <link href="https://www.kurup.org/blog/2009/07/04/clamz-to-the-rescue"/>
    <updated>2009-07-04T00:00:00-04:00</updated>
    <id>https://www.kurup.org/blog/2009/07/04/clamz-to-the-rescue</id>
    <content type="html"><![CDATA[<p><a href="http://kottke.org/09/05/99-classical-mp3s-for-8">Kottke</a> linked to some great deals on <a href="http://www.amazon.com/gp/product/B001U1J2S4?ie=UTF8&amp;tag=vinodkurupshomep&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B001U1J2S4">classical music at amazon</a><img src="http://www.assoc-amazon.com/e/ir?t=vinodkurupshomep&l=as2&o=1&a=B001U1J2S4" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />. In order to download them, you need to have the amazon mp3 downloader installed. They now offer a Debian (linux) version, but I couldn't get it working. It's meant for an older version of Debian, but it doesn't recognize the newer versions of the libraries installed on my system. I thought about doing some fancy apt-getting to try to get the right versions, but just thinking about that made my head throb. Then I heard about <a href="http://code.google.com/p/clamz/">clamz</a>, an open source project to replicate the amazon mp3 downloader. I installed the library packages they recommended (libgcrypt11-dev, libcurl4-openssl-dev, and libexpat1-dev) and then installed it.</p>

<p>I'm always a little leary to install packages from source, because then they're not managed by the package manager (apt-get). It becomes more of a tedious process to keep them updated or to uninstall them. To partially workaround that problem, I use a program called <a href="http://www.asic-linux.com.mx/~izto/checkinstall/">checkinstall</a>. It basically creates a package for any program that you want to install from source. So, instead of :</p>

<pre><code>./configure
make
sudo make install
</code></pre>

<p>you do:</p>

<pre><code>./configure
make
sudo checkinstall
</code></pre>

<p>It then creates a .deb and installs it. It asks you for some basic info about the program, but guesses as much as it can and does a decent job. I haven't delved into anything more involved than that, but there are ways to document dependencies which would allow it to be even more integrated into the package management system.</p>

<p>Anyway, it installed perfectly and within seconds I was downloading the music that I had purchased.</p>

<pre><code>vinod@ike:~/Music $ clamz "Desktop/The 99 Most Essential Mozart Masterpieces.amz"
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Source saved my photos!]]></title>
    <link href="https://www.kurup.org/blog/2004/01/05/open-source-saved-my-photos"/>
    <updated>2004-01-05T00:00:00-05:00</updated>
    <id>https://www.kurup.org/blog/2004/01/05/open-source-saved-my-photos</id>
    <content type="html"><![CDATA[<p>Loyal readers of my blog will remember that my Powerbook Wallstreet G3 died on September 21st, 2002. Since I'm probably the only one that remembers, I'll point you to that <a href="http://kurup.org/blog/2002/09/22/rip">blog entry</a>. The good news was that the hard drive was intact, the bad news was that I didn't have an easy way of accessing it. I have a Firewire enclosure, and my old Powerbook was running Linux, so I figured it wouldn't be too difficult to get my new Powerbook to read the data off the old HD. I mean Mac OS X and Linux are the same underneath, right? Well, not quite. Mac OS X uses a filesystem called HFS+ and my version of Linux uses a filesystem called ext2. Turns out that no one had written an ext2 driver for Mac OS X.</p>

<p>So, I turned to Google and with more effort than usual, found the <a href="http://sourceforge.net/projects/ext2fsx/">Mac OS X Ext2 Filesystem</a> Project, or ext2fsx. I subscribed to the RSS feed and just waited until I saw the 1.0.1 product released on 11/20/2003 (Never trust the 1.0!). I loaded it up and voila! My old Wallstreet was back. Thank you <a href="http://www.classicalguitar.net/brian/">Brian Bergstrand</a>!</p>

<p>In celebration, I've uploaded <a href="http://kurup.org/photo/index?folder_id=9672">pictures from 2001 and early 2002</a> that I thought I had lost forever. Enjoy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SCO]]></title>
    <link href="https://www.kurup.org/blog/2003/09/11/sco"/>
    <updated>2003-09-11T00:00:00-04:00</updated>
    <id>https://www.kurup.org/blog/2003/09/11/sco</id>
    <content type="html"><![CDATA[<p><a href="http://www.catb.org/~esr/writings/mcbride2.html">Open Letter to SCO</a>.</p>

<p><em>Loud Applause</em></p>

<div id="comment-box">
<h2>Comments from old site</h2>

<div class="one-comment">
<p><b>The Nigerian SCO Connection</b></p>
<p>
There is a great parody of the nigerian scam spam letter crossed over
with SCO over at <a
href="http://www.arstechnica.com/wankerdesk/03q2/nigerian-sco.html">here</a>(ArsTechnica).
</p>

<p>
I am very annoyed with these "johnny come lately" types who are trying
to claim stake to internet technologies *after* they are already
mature. It's like the company that tried to lay claim to
<em>hyperlinks</em>, even though xerox showed the technology back in
the 60s, or the recent claim by another company that claims it owns
the technology for embedding things like Flash, movies, etc as part of
the web browser. Where were these claims when the technologies were
developing???
</p>
<address class="signature">
<span class="author">Bhavesh Patel</span>
<span class="date">2003-09-27 11:35:44</span>
</address>
</div>

</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Source Medicine]]></title>
    <link href="https://www.kurup.org/blog/2002/11/24/open-source-medicine"/>
    <updated>2002-11-24T00:00:00-05:00</updated>
    <id>https://www.kurup.org/blog/2002/11/24/open-source-medicine</id>
    <content type="html"><![CDATA[<p>I wrote up a <a href="http://kurup.org/files/OpenSourceMedicine.pdf">little intro piece on the use of open source software in medical applications (PDF)</a>. HTML below...</p>

<p>Improving the communication of patient information is the key to
improving healthcare quality and efficiency. In most health care
organizations, written records are the main conduit of this
information, yet they are notoriously illegible and difficult to
browse. Reviewing past problems and past interventions is
time-consuming, if not impossible. The record is used mostly as a
one-way device for the clinician to record data. It is used much less
efficiently to provide important data or reminders back to the
clinician. This leads to redundant testing and treatment, as well as
to critical data being overlooked. Multiple providers and
administrative departments need access to patient information, yet the
paper record can only be in one place at a time. As a comprehensive
storehouse of patient information, the paper record is obsolete.</p>

<p>The electronical medical record (EMR) is an important weapon in the
fight against healthcare inefficiency. EMRs are software programs that
allow the clinician to record patient information. They are usually
tied in with other ancillary services such as pathology, laboratory,
pharmacy and radiology to provide a comprehensive view of a patientâ€™s
condition. EMRs have several advantages over written records. Records
can easily be searched for pertinent information leading to less
duplication of testing and treatment. The record can be programmed to
notify the clinician of drug interactions, abnormal lab results as
well as routine preventive health recommendations for which the
patient is eligible. This decreases medical errors and improves
quality. Decreasing errors will, in turn, decrease malpractice
costs. EMRs can recognize missed appointments and automatically send
letters to the patient reminding them to reschedule. Computers can
handle the routine, repetitive aspects of patient care that they do
best, allowing the clinician to concentrate on the care of the
patient. EMRs can be programmed to translate clinician diagnostic
information and documentation into insurer-required diagnosis and
billing codes, which makes billing and reporting more accurate and
efficient. EMRs can include access to medical references, thus
allowing the clinician to apply new knowledge immediately. EMRs have
the potential to improve communication between patients, providers and
consultants. All three groups can have access to the record at the
same time. Properly done, clinicians in different geographic areas and
using different computer systems can access and update a
patient's record. Finally, EMRs also promise to improve the
security and confidentiality of patient information. Paper records can
be inspected by any number of people while in transit. EMRs will only
let individuals with proper credentials view patient information and
different parts of the record can be guarded with different levels of
security.</p>

<p>Most EMR software packages are proprietary. The source code is
controlled by the vendor and there are restrictions on the use and
distribution of the software. As an example, Microsoft Word is a
proprietary program. The source code is not available. Users must
purchase a copy of the program and use it on only one computer. They
are not allowed to copy or redistribute the program and there is no
way for them to make changes to the way the program runs.</p>

<p>Proprietary software is not a good solution for the healthcare
industry. The software is expensive, often prohibitively so for small
clinician groups or for those in developing countries. The software is
complex and doesn't meet the clinician's needs. This is due
to the fact that clinicians are often not involved in the EMR
development process. While the software may be developed in
conjunction with advice from a few clinicians, users in the field have
little abilty to provide feedback or direction to
developers. Proprietary software packages often address only one
problem in the healthcare arena, such as recordkeeping, billing,
transcription, scheduling or medical reference. Unfortunately, since
each application is built by a different vendor, there is no
communication between applications, thus reducing their overall
benefit. There is no incentive for an EMR vendor to allow their
application to communicate with another vendor's billing
application, for example, because it would reduce their profit
potential if they were ever to develop a competing billing
application. This leads to the problem of vendor lock-in. Once a
healthcare organization implements an EMR, it becomes very difficult
to make a change. The vendor can essentially hold the organization
hostage to their pricing decision because the organization's
patient data is tied up in the current system. This especially becomes
a problem when the organization requests that problems be fixed or
features be added. They are at the mercy of the vendor who may be slow
to fix problems which don't affect their larger customers, or to
introduce features which won't be widely demanded. Unfortunately,
in the healthcare space, one size does not fit all. If the vendor ever
goes out of business or changes their focus, then the organization
faces an expensive migration. In addition, many current EMRs run on
Windows which has poor reliability and security records in comparison
to Linux and UNIX. For all these reasons, using proprietary software
is a poor solution for healthcare.</p>

<p>The alternative is Open Source Software (OSS). OSS is free. Free, in
this definition, means liberty, not necessarily price. While OSS may
have a price tag, the user always has complete liberty to do with the
code as they wish, including redistributing it for a charge or no
charge. Users have complete access to the source code which defines
the behavior of the software. They have the liberty to change the code
to suit their purposes. There are various open source licenses (GPL,
BSD) which each have their own various stipulations.</p>

<p>The most visible example of OSS is Linux, an operating system which
competes with Microsoft Windows. Apache, the most common web server in
use, and Openoffice, a suite of applications similar to Microsoft
Office, are 2 other successful examples. Anyone is free to download
these software programs, change them and redistribute them, if
desired. The strength of these programs come when users make changes
to fix problems or add features and then return those changes back to
the original developers.</p>

<p>David Wheeler has done an amazingly comprehensive analysis of OSS and
concludes:</p>

<blockquote><p>OSS/FS (Open Source Software / Free Software) has significant market share in many markets, is often the most reliable software, and in many cases has the best performance. OSS/FS scales, both in problem size and project size. OSS/FS software often has far better security, particularly when compared to Windows. Total cost of ownership for OSS/FS is often far less than proprietary software, particularly as the number of platforms increases. These statements are not merely opinions; these effects can be shown <em>quantitatively</em>, using a wide variety of measures. This doesn't even consider other issues that are hard to measure, such as freedom from control by a single source, freedom from licensing management (with its accompanying risk of audit and litigation), and increased flexibility.</p></blockquote>

<p>OSS also lowers the cost for vendors who support it. When proprietary
vendors create a product, they start with an empty slate, often
rebulding many pieces that have been built by other vendors. OSS
vendors start with an established code base, saving time and
money. Their final work then gets returned to the community, thus
improving the base at which other vendors start. There is much less
reinvention and correspondingly more room for innovation. Users are
empowered with OSS. Since they have full access to the source code,
they are able to fix problems that are important to
them. Alternatively, they can hire outside developers to fix
problems. There's no need to rely on the original developers, so if
the original developers ever leave the project or "go out of
business", the consumer can simply hire another team. The code is
theirs. In 1999, Medicalogic introduced an internet-based medical
record called LogicianInternet. Physicians took advantage of this
system to keep an EMR which was housed on Medicalogic's
computers. When Medicalogic was sold to GE Medical Systems, GE decided
to discontinue the program. All the physicians now have to print out
their patient records and switch back to paper records, or re-enter
all the patient information into a new EMR which they must purchase
and install. If the application had been open source, the users could
continue to use it, hiring new developers as needed to keep it
updated. Arsdigita was a company which specialized in building
community-centered websites and they released their code as open
source. As the dot-com economy recessed, they were forced to change
focus and were eventually bought out by another company. If they had
not released their code, all the users of their system would have been
forced to live with the program as it was, without updates or
enhancements. Alternatively, they would have had to migrate to another
system, which would be expensive. Instead, a community grew around the
software, called OpenACS
(<a href="http://www.openacs.org">http://www.openacs.org</a>). This community has
taken the software and improved it. Arsdigita's customers benefit
because, unlike Medicalogic's customers, they can continue to use and
customize their software. In addition, since the OpenACS community has
flourished, former Arsdigita customers can find developers through
OpenACS to fix problems and customize their software.</p>

<p>OSS is especially relevant in the medical arena. The medical community
is known to value academic freedom. Researchers regularly publish
their findings and if an intervention improves patient care, it makes
sense that it should be spread as widely as possible. The same should
be true of software which improves patient care. Proprietary software
is also more risky in the healthcare arena since medical software
companies are, as a rule, small outfits and are more prone to failure
as a business. The reasons small companies abound in the current arena
is because medical practices vary widely in their sizes,
characteristics and needs and their problems can not be solved with
one homogenous solution. Yet they still need to be able to communicate
with other heterogenous systems and legacy systems need to be
interfaced, not thrown away. OSS is an ideal method to develop
conduits which translate between proprietary software programs, if not
to replace them completely. In addition, OSS is a natural fit for
international collaboration due to the lack of intellectual property
issues and the need for customization of software for local
needs. Healthcare organizations in other countries will feel more
secure having control over the source code, rather than relinquishing
such control to vendors who may be in other countries and subject to
different regulations. Overall, OSS will lead to software that
improves the clinician's ability to function and improves patient
care.</p>

<p>There are numerous vibrant OSS healthcare projects in existance and I
encourage readers to follow the URLs to their websites for more
information: (See attached list)</p>

<p>How can you get involved? It's easy to make a difference in the Open
Source world. All it takes is personal interest, diligence and a
willingness to learn. Competence is rewarded. Try out the sotware. See
how it works and how it breaks. Report difficulties that you have or
features that you'd like to see. Be aware that developers are
sometimes working on their own free time, so be courteous and
patient. Take the time to read documentation and follow the
discussions before jumping in. Offer to help out where you can. Keep
notes about your experiences. These notes can help other new users and
help developers improve the program. Non-programmers can help by
submitting problem reports, writing documentation, and assisting
developers with domain advice. Most importantly, promote open
standards and open discussions among those around you. OSS software is
the best approach to building software that will solve real healthcare
problems.</p>

<h2>References</h2>

<ul>
<li><p>Bray B. <em>Keynote speech at the Inaugaration of the Openkaart Initiative.</em> 9/26/2001</p></li>
<li><p>Bruegger BP, Dal Molin J. <em>Open Source â€“ Open Content â€“ A Perfect Match for Sustainable Development.</em> PowerPoint Slideshow</p></li>
<li><p>Carnall D. <a href="http://www.carnall.demon.co.uk/OpSrcHth.htm"><em>Open Source Software in Healthcare</em></a></p></li>
<li><p>Carnall D. <a href="http://www.linuxuser.co.uk/articles/issue15/lu15-Real_Life_Linux-Vital_signs.pdf"><em>Vital Signs</em></a> LinuxUser. October 2001</p></li>
<li><p>Carnall D. <a href="http://www.linuxuser.co.uk/articles/issue2/lu2-Real_Life_Linux-Healthy_Outlook.pdf"><em>Healthy Outlook.</em></a> LinuxUser. July/August 2000</p></li>
<li><p>Carnall D. <em>Medical software's free future.</em> BMJ 2000; 321:976.</p></li>
<li><p>Cook B. <a href="http://www.ama-assn.org/sci-pubs/amnews/pick_02/bisa0819.htm"><em>Wipeout: Lessons on protecting Web-based EMR data.</em></a> AMNews. 8/19/2002.</p></li>
<li><p>Johnson DL. <a href="http://lorenzo.uwstout.edu/QQMIM/qq4.html"><em>Open Source Medical Information Management.</em></a></p></li>
<li><p>Johnson DL. <a href="http://amygdala.danlj.org/~danlj/OpenSource/MedicalEnterprise.html"><em>Medical Enterprises and Open Source.</em></a></p></li>
<li><p>O'Reilly T. <a href="http://opensource.oreilly.com/news/myths_1199.html"><em>Ten Myths about Open Source Software.</em></a></p></li>
<li><p>Wheeler DA. <a href="http://www.dwheeler.com/oss_fs_why.html"><em>Why Open Source Software / Free Software (OSS/FS)? Look at the numbers!</em></a></p></li>
</ul>


<h2>Links: General Medical Informatics:</h2>

<ul>
<li><p><a href="http://www.mihandbook.stanford.edu/handbook/home.htm">Handbook of Medical Informatics</a></p></li>
<li><p><a href="http://www.imia.org/">International Medical Informatics Association</a></p></li>
<li><p><a href="http://www.amia.org/">American Medical Informatics Association</a></p></li>
</ul>


<h2>Links: General Open Source:</h2>

<ul>
<li><p><a href="http://www.opensource.org/">Open Source Initiative</a></p></li>
<li><p><a href="http://www.fsf.org/">Free Software Foundation</a></p></li>
<li><p><a href="http://www.tuxedo.org/~esr/writings/cathedral-bazaar">The Cathedral and the Bazaar</a></p></li>
<li><p><a href="http://www.dwheeler.com/oss_fs_why.html">Why Open Source Software?</a></p></li>
</ul>


<h2>Links: Open Source Medical Projects:</h2>

<ul>
<li><p><a href="http://www.linuxmednews.com/linuxmednews/LMNProjects/Projects/folder_contents">An up-to-date list of projects is maintained here</a></p></li>
<li><p><a href="http://www.hardhats.org/">VISTA â€“ Veteran Administrations comprehensive healthcare software</a></p></li>
<li><p><a href="http://www.gehr.org/">GEHR (Good Electronic Health Record)</a></p></li>
<li><p><a href="http://www.txoutcome.org/">OIO (Open Infrastructure for Outcomes)</a></p></li>
<li><p><a href="http://www.openemed.org/">OpenEMed</a></p></li>
</ul>


<p>Last Modified: 9/19/02</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PhotoDB fixed]]></title>
    <link href="https://www.kurup.org/blog/2001/06/19/photodb-fixed"/>
    <updated>2001-06-19T00:00:00-04:00</updated>
    <id>https://www.kurup.org/blog/2001/06/19/photodb-fixed</id>
    <content type="html"><![CDATA[<p>I <a href="http://kurup.org/acs/photodb.html">fixed some security issues</a> in
the OpenACS photodb module.</p>
]]></content>
  </entry>
  
</feed>
