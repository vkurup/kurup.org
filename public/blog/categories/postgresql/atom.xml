<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: postgresql | Vinod Kurup]]></title>
  <link href="https://www.kurup.org/blog/categories/postgresql/atom.xml" rel="self"/>
  <link href="https://www.kurup.org/"/>
  <updated>2018-09-22T21:30:24-04:00</updated>
  <id>https://www.kurup.org/</id>
  <author>
    <name><![CDATA[Vinod Kurup]]></name>
    <email><![CDATA[vinod@kurup.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Autovacuum not running]]></title>
    <link href="https://www.kurup.org/blog/2018/05/30/autovacuum-fail"/>
    <updated>2018-05-30T21:26:00-04:00</updated>
    <id>https://www.kurup.org/blog/2018/05/30/autovacuum-fail</id>
    <content type="html"><![CDATA[<p>OK, this is a debug session in progress, so don't expect a nice solution at the end. We're working
on a project that does analysis of some public voter registration data. The DB is hosted on Amazon
RDS and I've been perplexed by how poorly queries are performing there, despite the tables only have
about 10 million rows. Simple queries are taking many minutes, which is orders of magnitude slower
than my laptop.</p>

<p><a href="http://mlavin.org/">Mark</a> suggested running 'VACUUM ANALYZE', which I didn't think would help
because my understanding was that the autovacuum process in PostgreSQL would be taking care of that
on a regular basis. These queries had been slow for days with no recent inserts or updates, so
certainly autovacuum should have caught up to them by now. But, I tried it anyway and lo and behold:</p>

<p>```sql
db=> select count(*) from voter_ncvoter;</p>

<h2>  count</h2>

<p> 12336571
(1 row)
Time: 315777.051 ms
db=> vacuum analyze;
VACUUM
Time: 11377035.096 ms
db=> select count(*) from voter_ncvoter;</p>

<h2>  count</h2>

<p> 12336571
(1 row)
Time: 4300.107 ms
```</p>

<p>Woah, that worked! Sure, it took 3+ hours to run ANALYZE, but wow. So, why isn't autovacuum
automatically doing this for us. (I mean it has the phrase 'auto' in its name!!!)</p>

<p>I've found this great article on <a href="https://blog.2ndquadrant.com/autovacuum-tuning-basics/">autovacuum
basics</a> which led me to do this query:</p>

<p>```sql
db=> select relname, n_live_tup, last_autoanalyze from pg_stat_all_tables where relname like 'voter_%';</p>

<pre><code>   relname       | n_live_tup |       last_autoanalyze
</code></pre>

<p>---------------------+------------+------------+-------------------------------
 voter_changetracker |  306689271 | 2018-05-05 04:59:08.503876+00
 voter_filetracker   |         41 | 2018-05-13 02:00:47.802633+00
 voter_ncvhis        |          0 |
 voter_ncvoter       |   12336616 | 2018-05-06 13:20:30.073426+00
 voter_badlinerange  |        404 | 2018-04-10 05:44:39.949193+00
(5 rows)
```</p>

<p>So those 2 large tables haven't been ANALYZEd in weeks, despite the fact that we import a 10 million
row CSV once every week. This is the end of my debugging road, for now. Hopefully, I'll figure out
what's going on.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[psql doesn't like tabs]]></title>
    <link href="https://www.kurup.org/blog/2003/06/24/psql-doesnt-like-tabs"/>
    <updated>2003-06-24T00:00:00-04:00</updated>
    <id>https://www.kurup.org/blog/2003/06/24/psql-doesnt-like-tabs</id>
    <content type="html"><![CDATA[<p>psql doesn't deal well with tabs. If you feed it a function that has tabs  in it, and then call that function, you'll often get this:  <code>ERROR:  parser: parse error at or near "for" at character 15</code>.  Thus, if you ever see this in your error log, it's time to <code>M-x untabify</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PG 7.2 to 7.3]]></title>
    <link href="https://www.kurup.org/blog/2003/06/24/pg-72-to-73"/>
    <updated>2003-06-24T00:00:00-04:00</updated>
    <id>https://www.kurup.org/blog/2003/06/24/pg-72-to-73</id>
    <content type="html"><![CDATA[<p>Not all of OpenACS is Postgres 7.3 compliant yet. OpenACS 5 is compliant and the core packages in OpenACS 4.6 are compliant, but some non-core packages haven't been fixed yet. Noncompliant packages will complain:</p>

<pre><code>[24/Jun/2003:15:21:36][26623.196621][-conn:kurup::4] Error:  Ns_PgExec: result status: 7 message: ERROR:  Function  pa_collection__new("unknown", "unknown", "unknown", timestamp with time zone,  "unknown", "unknown", "unknown") does not exist
Unable to identify a function that satisfies the given argument types
You may need to add explicit typecasts
</code></pre>

<p>It is looking for a function with <code>timestamp with time zone</code> as one of its parameters, but most OpenACS pl/pgsql functions were defined as accepting <code>timestamp</code>. In PG 7.3, <code>timestamp</code> means 'timestamp <strong>without</strong> timezone'. <code>timestamptz</code> means 'timestamp <strong>with</strong> timezone'. So, the quick fix, is to change <code>timestamp</code> to <code>timestamptz</code>.</p>

<p>Read more at <a href="http://openacs.org/forums/message-view?message_id=64527">Bart's posts in this thread</a>.</p>
]]></content>
  </entry>
  
</feed>
